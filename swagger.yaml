swagger: "2.0"
info:
  version: "1.0.0"
  title: Connection Process App
# during dev, should point to your local machine
host: hercules.medicalshipment.com:8888
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/login:
    post:
      tags:
      - "Auth"
      summary: Authenticates the User and provides "authToken" for subsequent requests.
      parameters:
        - in: "body"
          name: "body"
          description: "Your email and password for authentication."
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseAuth"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseAuth"
            
  /product/getlist:
    post:
      tags:
      - "Get List of Products"
      summary: The endpoint to retrieve the product list. The first request should sent offset 0 and length as the number of desired products. The Normal and Custom are optional filters. For detailed view, visit Model tab.
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to retrieve the product list. The first request should sent offset 0 and length as the number of desired products. The Normal and Custom are optional filters. For detailed view, visit Model tab. Available categories:
               * Price
               * PartNumber
               * ProductNumber
               * ManufacturerID
               * UOM
               * Weight
               * Height
               * Length
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
              filters:
                type: object
                properties:
                  normal:
                    type: object
                    properties:
                      category:
                        type: string
                        enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]
                        example: "Price"
                        description: >
                          Available categories for sorting:
                           * Price
                           * PartNumber
                           * ProductNumber
                           * ManufacturerID
                           * UOM
                           * Weight
                           * Height
                           * Length
                      sortBy:
                        type: string
                        enum: ["ASC", "DESC"]
                        description: >
                          Sort order:
                           * `ASC` - Ascending, from A to Z
                           * `DESC` - Descending, from Z to A
                      minPrice:
                        type: number
                        example: 0
                      maxPrice:
                        type: number
                        example: 100000
                  custom:
                    type: array
                    items: 
                      type: object
                      properties:
                        category:
                          type: string
                          enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]

                        operator:
                          type: string
                          enum: ["eq","gt","lt"]
                        value:
                          type: string
                          example: "0.01"

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetList"
  /product/getLatestProducts:
    post:
      tags:
      - "Get Latest Products"
      summary: The endpoint to retrieve the product list modified/created after a specific date. The first request should sent offset 0 and length as the number of desired products and the date after which the prodcuts are created/modified.
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "The endpoint to retrieve the product list modified/created after a specific date. The first request should sent offset 0 and length as the number of desired products and the date after which the prodcuts are created/modified."
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
              date:
                type: string
                example: "2020-06-26"
        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetLatest"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetLatest"
            
  /bom/getProducts:
    post:
      tags:
      - "Get List of BOMS"
      summary: "The endpoint to retrieve the list of BOMs based on the filter.The first request should sent offset 0 and length as the number of desired products. The Normal and Custom are optional filters."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to retrieve the BOMs list. The first request should sent offset 0 and length as the number of desired products. The Normal and Custom are optional filters. For detailed view, visit Model tab. Available categories:
               * Price
               * PartNumber
               * ProductNumber
               * ManufacturerID
               * UOM
               * Weight
               * Height
               * Length
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
              filters:
                type: object
                properties:
                  normal:
                    type: object
                    properties:
                      category:
                        type: string
                        enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]
                        example: "Price"
                        description: >
                          Available categories for sorting:
                           * Price
                           * PartNumber
                           * ProductNumber
                           * ManufacturerID
                           * UOM
                           * Weight
                           * Height
                           * Length
                      sortBy:
                        type: string
                        enum: ["ASC", "DESC"]
                        description: >
                          Sort order:
                           * `ASC` - Ascending, from A to Z
                           * `DESC` - Descending, from Z to A
                      minPrice:
                        type: number
                        example: 0
                      maxPrice:
                        type: number
                        example: 100000
                  custom:
                    type: array
                    items: 
                      type: object
                      properties:
                        category:
                          type: string
                          enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]

                        operator:
                          type: string
                          enum: ["eq","gt","lt"]
                        value:
                          type: string
                          example: "0.01"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetList"
            
  /supplier/getlist:
    post:
      tags:
      - "Get List of Suppliers"
      summary: "The endpoint to retrieve the list of Suppliers.The first request should sent offset 0 and length as the number of desired Suppliers. The Normal and Custom are optional filters."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to retrieve the list of Suppliers.The first request should sent offset 0 and length as the number of desired Suppliers.. For detailed view, visit Model tab. 
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetSuppliersList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetSuppliersList"
# complex objects have schema definitions
definitions:
  SuccessResponseGetSuppliersList:
    required:
      - products
    properties:
      suppliers:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            Status:
              type: string
            Active:
              type: string
            ServiceName: 
              type: string
            Description:
              type: string
            Contact:
              type: string
            SalesForceId:
              type: string
            Name:
              type: string
      keys:
        type: array
        items:
          type: string
      totalCount:
        type: number
                        
  ErrorResponseGetSuppliersList:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseGetLatest:
    required:
      - products
    properties:
      products:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            Status:
              type: string
            Active:
              type: string
            Vendor: 
              type: string
            VendorPartNumber:
              type: string
            ManufacturerId:
              type: string
            ManufacturerName:
              type: string
            Price:
              type: number
                        
  ErrorResponseGetLatest:
    required:
      - message
    properties:
      message:
        type: string
        example: "length, offset or date is missing"
  SuccessResponseGetList:
    required:
      - ids
      - products
    properties:
      ids:
        type: array
        items:
          type: integer
      products:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            Status:
              type: string
            Active:
              type: string
            Vendor: 
              type: string
            VendorPartNumber:
              type: string
            ManufacturerId:
              type: string
            ManufacturerName:
              type: string
            Price:
              type: number
            
  ErrorResponseGetList:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseAuth:
    required:
      - user
      - authToken
    properties:
      user:
        type: object
        properties:
          id: 
            type: string
          email: 
            type: string
          username: 
            type: string
          isAdmin:
            type: string
              
      authToken:
        type: string

  ErrorResponseAuth:
    required:
      - message
    properties:
      message:
        type: string
        example: invalid username or password
  
