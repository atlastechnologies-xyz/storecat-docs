swagger: "2.0"
info:
  version: "1.0.0"
  title: Connection Process App
# during dev, should point to your local machine
host: hercules.medicalshipment.com:8888
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/login:
    post:
      tags:
      - "Auth"
      summary: Authenticates the User and provides "authToken" for subsequent requests.
      parameters:
        - in: "body"
          name: "body"
          description: "Your email and password for authentication."
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseAuth"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseAuth"
  /product/get:
    post:
      tags:
      - "Get Single Product"
      summary: "The endpoint to get a single product."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to search through the parts, and used the partid(PartNumber) and uomid(PartUOM) while creating the product. 
          required: true
          schema:
            type: object
            properties:
              productId:
                type: string
                example: "productId"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseProductGet"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseProductGet"
  /product/getlist:
    post:
      tags:
      - "Get List of Products"
      summary: The endpoint to retrieve the product list. The first request should send offset 0 and length as the number of desired products. The Normal and Custom are optional filters. For a detailed view, visit the Model tab.
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to retrieve the product list. The first request should send offset 0 and length as the number of desired products. The Normal and Custom are optional filters. For a detailed view, visit the Model tab. Available categories:
               * Price
               * PartNumber
               * ProductNumber
               * ManufacturerID
               * UOM
               * Weight
               * Height
               * Length
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
              filters:
                type: object
                properties:
                  normal:
                    type: object
                    properties:
                      category:
                        type: string
                        enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]
                        example: "Price"
                        description: >
                          Available categories for sorting:
                           * Price
                           * PartNumber
                           * ProductNumber
                           * ManufacturerID
                           * UOM
                           * Weight
                           * Height
                           * Length
                      sortBy:
                        type: string
                        enum: ["ASC", "DESC"]
                        description: >
                          Sort order:
                           * `ASC` - Ascending, from A to Z
                           * `DESC` - Descending, from Z to A
                      minPrice:
                        type: number
                        example: 0
                      maxPrice:
                        type: number
                        example: 100000
                  custom:
                    type: array
                    items: 
                      type: object
                      properties:
                        category:
                          type: string
                          enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]

                        operator:
                          type: string
                          enum: ["eq","gt","lt"]
                          example: "gt"
                        value:
                          type: string
                          example: "0.00"

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetList"
  /product/getLatestProducts:
    post:
      tags:
      - "Get Latest Products"
      summary: The endpoint to retrieve the product list modified/created after a specific date. The first request should send offset 0 and length as the number of desired products and the date after which the products are created/modified.
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "The endpoint to retrieve the product list modified/created after a specific date. The first request should send offset 0 and length as the number of desired products and the date after which the products are created/modified."
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
              date:
                type: string
                example: "2020-06-26"
        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetLatest"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetLatest"
            
  /bom/getProducts:
    post:
      tags:
      - "Get List of BOMS"
      summary: "The endpoint to retrieve the list of BOMs based on the filter. The first request should send offset 0 and length as the number of desired products. The Normal and Custom are optional filters."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to retrieve the BOMs list. The first request should send offset 0 and length as the number of desired products. The Normal and Custom are optional filters. For detailed view, visit Model tab. Available categories:
               * Price
               * PartNumber
               * ProductNumber
               * ManufacturerID
               * UOM
               * Weight
               * Height
               * Length
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
              filters:
                type: object
                properties:
                  normal:
                    type: object
                    properties:
                      category:
                        type: string
                        enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]
                        example: "Price"
                        description: >
                          Available categories for sorting:
                           * Price
                           * PartNumber
                           * ProductNumber
                           * ManufacturerID
                           * UOM
                           * Weight
                           * Height
                           * Length
                      sortBy:
                        type: string
                        enum: ["ASC", "DESC"]
                        description: >
                          Sort order:
                           * `ASC` - Ascending, from A to Z
                           * `DESC` - Descending, from Z to A
                      minPrice:
                        type: number
                        example: 0
                      maxPrice:
                        type: number
                        example: 100000
                  custom:
                    type: array
                    items: 
                      type: object
                      properties:
                        category:
                          type: string
                          enum: ["Price","PartNumber", "ProductNumber","ManufacturerID","UOM","Weight","Height","Length"]

                        operator:
                          type: string
                          enum: ["eq","gt","lt"]
                          example: "gt"
                        value:
                          type: string
                          example: "0.00"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetList"
            
  /supplier/getlist:
    post:
      tags:
      - "Get List of Suppliers"
      summary: "The endpoint to retrieve the list of Suppliers. The first request should send offset 0 and length as the number of desired Suppliers. The Normal and Custom are optional filters."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to retrieve the list of Suppliers. The first request should send offset 0 and length as the number of desired Suppliers. For a detailed view, visit the Model tab. 
          required: true
          schema:
            type: object
            required:
              - length
              - offset
            properties:
              length:
                type: string
                example: "100"
              offset:
                type: string
                example: "0"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetSuppliersList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetSuppliersList"
  
 
  /uom/getUomList:
    post:
      tags:
      - "Get List of available UOMs"
      summary: "The endpoint to retrieve the list of availble UOMs for usage in add Part."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetUOM"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetUOM"
  /supplier/getsuppliers:
    post:
      tags:
      - "Get List of Available Vendors and Manufacturers"
      summary: "The endpoint to retrieve the list of available Vendors and Manufacturers"
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseGetSuppliers"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseGetSuppliers"

  /part/add:
    post:
      tags:
      - "Add new parts"
      summary: "The endpoint will let you add a part."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint will let you add a part. Here 'Vendor', 'Manufacture Name' must be a valid from supplier/getsuppliers API, similarly 'UOM' must also be a valid values from the Uom/getUOMs endpoint.  
          required: true
          schema:
            type: object
            properties:
              Vendor:
                type: string
                example: "Mckesson"
              VendorPartNumber:
                type: string
                example: "0"
              ItemId:
                type: string
                example: "0"
              LeadTime:
                type: integer
                example: 2
              DefaultVendor:
                type: boolean
                example: true
              Description:
                type: string
              ManufacturerId:
                type: string
              ManufacturerName:
                type: string
                example: "Wesley Trading"
              ItemDetails:
                type: string
              Status:
                type: string
                enum: ["active","Not active"]
              UOMs:
                type: array
                items: 
                  type: object
                  properties:
                    CartonCount:
                      type: integer
                    CartonType:
                      type: string
                    Cost:
                      type: string
                      example: "10"
                    Height:
                      type: integer
                      example: 0
                    ItemAvailability:
                      type: boolean
                      default: false
                    ItemsAvailable:
                      type: integer
                      default: 0
                    Length:
                      type: number
                    MinQuantity:
                      type: integer
                      example: 0
                    Per:
                      type: integer
                      example: 1
                    SizeUOM:
                      type: string
                      example: "in"
                    Status:
                      type: string
                      enum: ["active","Not active"]
                    UOM:
                      type: string
                      example: "EA"
                    Weight:
                      type: integer
                      example: 0
                    WeightUOM:
                      type: string
                      example: "lbs"
                    Width:
                      type: integer
                      default: 0
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseAddPart"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseAddPart"

  /search/parts:
    post:
      tags:
      - "Search parts"
      summary: "The endpoint to search through the parts, and used the partid(PartNumber) and uomid(PartUOM) while creating the product."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to search through the parts, and used the partid(PartNumber) and uomid(PartUOM) while creating the product. 
          required: true
          schema:
            type: object
            properties:
              keyword:
                type: string
                example: "part name"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseSearchParts"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseSearchParts"
  /product/add:
    post:
      tags:
      - "Add new products"
      summary: "The endpoint will let you add a product."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint will let you add a product. Here 'PartNumber', 'PartUOM' must be a valid from search/parts API, similarly 'UOM' must also be a valid values from the Uom/getUOMs endpoint. The ProductPictureUrl will be a stringified(JSON.stringify(array)) json array of all images urls.
          required: true
          schema:
            type: object
            properties:
              IsBOM:
                type: boolean
                example: false
              Active:
                type: boolean
                example: true
              AlertNote:
                type: boolean
                example: false
              AllowUOM:
                type: boolean
                example: false
              Class:
                type: string
                example: ""
              ComboBox:
                type: boolean
                example: false
              DefaultFlag:
                type: string
                example: ""
              Height:
                type: integer
                example: 0
              IncomeAccount:
                type: string
                example: ""
              ExpenseAccountName:
                type: string
                example: ""
              Length:
                type: integer
                example: 0
              PartNumber:
                type: integer
                example: 4483
              PartUOM:
                type: integer
                example: 17516
              Price:
                type: integer
                example: 25
              ProductDescription:
                type: string
                example: ""
              ProductDetails:
                type: string
                example: ""
              ProductPictureUrl:
                type: string
                example: ""
              ProductSKU:
                type: string
                example: ""
              ProductSOItemType:
                type: string
                example: ""
              ProductUPC:
                type: string
                example: ""
              Taxable:
                type: boolean
                example: false
              UOM:
                type: string
                example: "ea"
              UnitOfMeasureName:
                type: string
                example: "Lbs"
              Weight:
                type: integer
                example: 0
              WeightUOM:
                type: string
                example: "Kg"
              CatLookup:
                type: string
                example: ""
              SizeUOM:
                type: string
                example: "in"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseAddBOM"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseAddBOM"
            
  /search/products:
    post:
      tags:
      - "Search Products"
      summary: "The endpoint to search through the Products, and used the id(BOMParentID) while creating the BOM."
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint to search through the products,and used the id(BOMParentID) while creating the BOM. 
          required: true
          schema:
            type: object
            properties:
              keyword:
                type: string
                example: "product name"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseSearchProducts"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseSearchProducts"
  /bom/addproduct:
    post:
      tags:
      - "Add new BOMs"
      summary: "The endpoint will let you add a BOM. A BOM must contain 2 or more than 2 BOMChildren(Products)"
      parameters:
        - name: Authorization
          in: header
          description: authToken retrieved in previous auth request, Every new request to Auth will expire the previous authToken and generate a new one.
          required: true
          type: string
        - in: "body"
          name: "body"
          description: >
            The endpoint will let you add a BOM. Here, BOMParentID (under BOMChildren) must be a valid Id obtained from search/products API. The ProductPictureUrl will be a stringified(JSON.stringify(array)) json array of all images urls.
          required: true
          schema:
            type: object
            properties:
              IsBOM:
                type: boolean
                example: true
              Active:
                type: boolean
                example: true
              AlertNote:
                type: boolean
                example: false
              AllowUOM:
                type: boolean
                example: false
              Class:
                type: string
                example: ""
              ComboBox:
                type: boolean
                example: false
              DefaultFlag:
                type: string
                example: ""
              Height:
                type: integer
                example: 0
              IncomeAccount:
                type: string
                example: ""
              ExpenseAccountName:
                type: string
                example: ""
              Length:
                type: integer
                example: 0
              Price:
                type: integer
                example: 25
              ProductDescription:
                type: string
                example: ""
              ProductDetails:
                type: string
                example: ""
              ProductPictureUrl:
                type: string
                example: ""
              ProductSKU:
                type: string
                example: ""
              ProductSOItemType:
                type: string
                example: ""
              ProductUPC:
                type: string
                example: ""
              Taxable:
                type: boolean
                example: false
              UnitOfMeasureName:
                type: string
                example: "Lbs"
              Weight:
                type: integer
                example: 0
              WeightUOM:
                type: string
                example: "Kg"
              CatLookup:
                type: string
                example: ""
              SizeUOM:
                type: string
                example: "in"
              BOMChildren:
                type: array
                items: 
                  type: object
                  properties:
                    Price:
                      type: number
                    BOMParentID:
                      type: integer
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponseAddProduct"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponseAddProduct"
            


# complex objects have schema definitions
definitions:
  SuccessResponseSearchProducts:
    properties:
      total: 
        type: integer
        example: 10
      products:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
              example: 2
            Status:
              type: string
              example: "active"
            Vendor:
              type: string
              example: "AMSCO"
            ManufacturerName:
              type: string
              example: "AmericanDiagnosticCorporation"
            ManufacturerId: 
              type: string
              example: "768-641-11AAD"
            DefaultFlag: 
              type: boolean
              example: true
            

  ErrorResponseSearchProducts:
    required:
      - message
    properties:
      message:
        type: string
        example: "Please specify a keyword"
  SuccessResponseSearchParts:
    properties:
      total: 
        type: integer
        example: 10
      parts:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
              example: 3145
            ManufacturerName:
              type: string
              example: "AmericanDiagnosticCorporation"
            ManufacturerId: 
              type: string
              example: "768-641-11AAD"
            DefaultVendor: 
              type: boolean
              example: true
            UOMs:
              type: array
              items: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 345
                  Status:
                    type: string
                    example: "active"
                  Cost:
                    type: number
                    example: 10
                  PartId:
                    type: integer
                    example: 3145

  ErrorResponseSearchParts:
    required:
      - message
    properties:
      message:
        type: string
        example: "Please specify a keyword"
  SuccessResponseGetSuppliers:
    properties:
      vendors:
        type: array
        items: 
          type: string
      manufacturers:
        type: array
        items: 
          type: string
            
  ErrorResponseGetSuppliers:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseGetUOM:
    properties:
      UOMs:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
              example: 10
            Name:
              type: string
              example: "bx100"
            UOM:
              type: string
              example: "bx100"
            per:
              type: integer
              example: 100
            createdAt:
              type: string
            updatedAt:
              type: string
            
  ErrorResponseGetUOM:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseAddPart:
    required:
      - message
    properties:
      message:
        type: string
        example: "Part added Successfully"
  ErrorResponseAddPart:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseAddProduct:
    required:
      - message
    properties:
      message:
        type: string
        example: "Product added Successfully"
  ErrorResponseAddProduct:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseAddBOM:
    required:
      - message
    properties:
      message:
        type: string
        example: "Product created successfully"
  ErrorResponseAddBOM:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseGetSuppliersList:
    required:
      - products
    properties:
      suppliers:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            Status:
              type: string
            Active:
              type: string
            ServiceName: 
              type: string
            Description:
              type: string
            Contact:
              type: string
            SalesForceId:
              type: string
            Name:
              type: string
      keys:
        type: array
        items:
          type: string
      totalCount:
        type: number
                        
  ErrorResponseGetSuppliersList:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseGetLatest:
    required:
      - products
    properties:
      products:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            Status:
              type: string
            Active:
              type: string
            Vendor: 
              type: string
            VendorPartNumber:
              type: string
            ManufacturerId:
              type: string
            ManufacturerName:
              type: string
            Price:
              type: number
                        
  ErrorResponseGetLatest:
    required:
      - message
    properties:
      message:
        type: string
        example: "length, offset or date is missing"
  SuccessResponseProductGet:
    required:
        - ids
        - products
    properties:
      product:
        type: object
        properties:
          id:
            type: string
          Status:
            type: string
          Active:
            type: string
          Vendor: 
            type: string
          VendorPartNumber:
            type: string
          ManufacturerId:
            type: string
          ManufacturerName:
            type: string
          Price:
            type: number
          ProductURL:
            type: string
          COGS:
            type: number
          ProductSalesforce:
            type: object
          RelatedCompetitorProducts:
            type: array
            items:
              type: object
          SimilarManufacturerParts:
            type: array
            items:
              type: object
  ErrorResponseProductGet:
    properties:
      message:
        type: string
        example: "Product Not found"
  SuccessResponseGetList:
    required:
      - ids
      - products
    properties:
      ids:
        type: array
        items:
          type: integer
      products:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            Status:
              type: string
            Active:
              type: string
            Vendor: 
              type: string
            VendorPartNumber:
              type: string
            ManufacturerId:
              type: string
            ManufacturerName:
              type: string
            Price:
              type: number
            COGS:
              type: number
            
  ErrorResponseGetList:
    required:
      - message
    properties:
      message:
        type: string
        example: "Unauthorized"
  SuccessResponseAuth:
    required:
      - user
      - authToken
    properties:
      user:
        type: object
        properties:
          id: 
            type: string
          email: 
            type: string
          username: 
            type: string
          isAdmin:
            type: string
      authToken:
        type: string

  ErrorResponseAuth:
    required:
      - message
    properties:
      message:
        type: string
        example: invalid username or password
  
